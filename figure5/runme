#!/bin/bash
#Thomas Steinke (tsteinke@seas.harvard.edu) November 2010
#This README/runme file shows the overall structure of our implementation
#and experiments. Running this script will download the packet trace,
#preprocess it, compile our code, run experiments, and, finally, produce
#the graphs used in our paper. Running this script will take approximately
#three days. It is not meant to be entirely practical, but it makes it clear
#how our code works.
#
#Firstly,
#hhh = our algorithm
#uhhh = our algorithm with unitary updates
#omp = the parallel version of our algorithm
#ancestry = partial ancestry algorithm
#full = full ancestry algorithm
#Program names are appended by the dimension:
# *1 and *2 are byte-wise (1- and 2-d resp.) and 1_33 are bit-wise (1-d)
#
#There is a makefile that compiles all our programs.
make all
FILEURL=https://data.caida.org/datasets/passive-2016/equinix-chicago/20160121-130000.UTC/equinix-chicago.dirA.20160121-130000.UTC.anon.pcap.gz
#ATTENTION: THIS SCRIPT WILL FAIL WITHOUT A USERNAME AND PASSWORD. PLEASE VISIT www.caida.org.

USERPASS=${CAIDA_USERNAME}:${CAIDA_PASSWORD} #Enter your credentials!

curl -u $USERPASS $FILEURL > data.pcap.gz

#data needs to be made human-readable (takes time)
gunzip -f data.pcap.gz
tcpdump -q -n -t -r data.pcap | grep IP | sed 's/\./ /g' | awk '{print $2" "$3" "$4" "$5"\t"$8" "$9" "$10" "$11}' | grep -v "[a-z:]" > trace_chicago2016 2> /dev/null
rm data.pcap #save space
#alltests does a whole bunch of predetermined values
time ./alltests trace_chicago2016
echo "Results:"
cat trace_chicago2016.summary
python make_plot.py
